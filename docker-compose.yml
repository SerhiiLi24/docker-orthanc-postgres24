version: "3.3"

services:
  orthanc:
    hostname: orthanc
    container_name: orthanc
    image: orthancteam/orthanc
    volumes:
      - ./configs/plugins.json:/etc/orthanc/plugins.json:ro
    ports:
      - 8042:8042 # Orthanc web interface
      - 4242:4242 # Orthanc REST API
      - 104:104 # DICOMweb (WADO) cfind/cmove server
    environment:
      VERBOSE_ENABLED: "true" # Enable verbose logging
      VERBOSE_STARTUP: "true" # Enable verbose logging during startup
      OSIMIS_WEB_VIEWER1_PLUGIN_ENABLED: "true" doesnt work in orthanc 1.9.0
      STONE_WEB_VIEWER_PLUGIN_ENABLED: "true" # Enable the Web viewer plugin
      DICOM_WEB_PLUGIN_ENABLED: "true" # Enable the DICOMweb plugin
      GDCM_PLUGIN_ENABLED: "true" # Enable the GDCM plugin
      INDEXER_PLUGIN_ENABLED: "true" # Enable the indexer plugin
      ORTHANC_EXPLORER_2_ENABLED: "true" # Enable the Orthanc Explorer 2
    networks:
      - orthanc-network
    depends_on:
      - postgres-server

  viewer:
    hostname: ohif
    container_name: ohif-viewer
    image: ohif/app:latest
    volumes:
      - ./configs/app-config.js:/usr/share/nginx/html/app-config.js:ro
    ports:
      - "3000:80"
    networks:
      - orthanc-network
    
  nginx:
    hostname: nginx
    container_name: nginx
    image: nginx:latest
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - orthanc
    networks:
      - orthanc-network

  postgres-server:
    hostname: postgres
    container_name: postgres
    image: postgres:14
    labels:
        io.portainer.accesscontrol.public 
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    command: >
      -c max-wal-size=2GB
    environment:
      POSTGRES_DB: orthanc
      POSTGRES_USER: orthanc
      POSTGRES_PASSWORD: orthanc
    ports:
      - 5432:5432
    networks:
      - orthanc-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U orthanc -d orthanc"]
      interval: 10s
      timeout: 5s
      retries: 5


  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    labels:
        io.portainer.accesscontrol.public
    environment:
      PGADMIN_DEFAULT_EMAIL: "pgadmin@pgadmin.com"
      PGADMIN_DEFAULT_PASSWORD: "pgadmin"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - orthanc-network

  postgres_exporter:
    container_name: exporter_container
    image: prometheuscommunity/postgres-exporter:v0.10.1
    environment:
      DATA_SOURCE_URI: "postgres:5432/orthanc?sslmode=disable"
      DATA_SOURCE_USER: "orthanc"
      DATA_SOURCE_PASS: "orthanc"
      PG_EXPORTER_EXTEND_QUERY_PATH: "/etc/postgres_exporter/queries.yaml"
    volumes:
      - ./queries.yaml:/etc/postgres_exporter/queries.yaml:ro
    ports:
      - "9187:9187"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 500M
    networks:
      - orthanc-network


volumes:
    postgres_data:
    pgadmin-data:

networks:
  orthanc-network:
    name: orthanc-network
    driver: bridge
