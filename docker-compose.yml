version: "3.3"

services:
  orthanc:
    hostname: orthanc-ct
    container_name: orthanc-ct
    image: orthancteam/orthanc:24.5.1-full
    volumes:
      - ./configs/plugins.json:/etc/orthanc/plugins.json:ro
    ports:
      - 8042:8042 # Orthanc web interface
      - 4242:4242 # Orthanc REST API
      - 104:104 # DICOMweb (WADO) cfind/cmove server
    environment:
      VERBOSE_ENABLED: "true" # Enable verbose logging
      VERBOSE_STARTUP: "true" # Enable verbose logging during startup
#      OSIMIS_WEB_VIEWER1_PLUGIN_ENABLED: "true" #doesnt work in orthanc 1.9.0
      STONE_WEB_VIEWER_PLUGIN_ENABLED: "true" # Enable the Web viewer plugin
      DICOM_WEB_PLUGIN_ENABLED: "true" # Enable the DICOMweb plugin
      GDCM_PLUGIN_ENABLED: "true" # Enable the GDCM plugin
#      INDEXER_PLUGIN_ENABLED: "true" # Enable the indexer plugin
      ORTHANC_EXPLORER_2_ENABLED: "true" # Enable the Orthanc Explorer 2
    networks:
      - orthanc-network-ct
    depends_on:
      - postgres-server

  viewer:
    hostname: ohif
    container_name: ohif-viewer
    image: ohif/app:latest
    volumes:
      - ./configs/app-config.js:/usr/share/nginx/html/app-config.js:ro
    ports:
      - "3000:80"
    networks:
      - orthanc-network
    
  nginx:
    hostname: nginx
    container_name: nginx
    image: nginx:latest
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - orthanc
    networks:
      - orthanc-network-ct

  postgres-server:
    hostname: postgres-ct
    container_name: postgres-ct
    image: postgres:14 
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    command: >
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    networks:
      - orthanc-network-ct
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d orthanc_db"]
      interval: 10s
      timeout: 5s
      retries: 5


  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN__DEF_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - orthanc-network-ct

  postgres_exporter:
    container_name: exporter_container
    image: prometheuscommunity/postgres-exporter:latest
    environment:
      DATA_SOURCE_URI: "postgres-ct:5432/orthanc_db?sslmode=disable"
      DATA_SOURCE_USER: ${POSTGRES_USER}
      DATA_SOURCE_PASS: ${POSTGRES_PASSWORD}
      PG_EXPORTER_EXTEND_QUERY_PATH: "/etc/postgres_exporter/queries.yaml"
    volumes:
      - ./queries.yaml:/etc/postgres_exporter/queries.yaml:ro
    ports:
      - "9187:9187"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 500M
    networks:
      - orthanc-network-ct


volumes:
    postgres_data:
    pgadmin-data:

networks:
  orthanc-network-ct:
    name: orthanc-network-ct
    driver: bridge
